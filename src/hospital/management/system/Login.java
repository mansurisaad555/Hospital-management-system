package hospital.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.sql.ResultSet;public class Login extends JFrame implements ActionListener {    private JTextField usernameField;    private JPasswordField passwordField;    private JButton loginButton, cancelButton;    public Login() {        setTitle("Hospital Management System - Login");        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        setSize(500, 400);        setLocationRelativeTo(null); // Center the frame on the screen        setLayout(new BorderLayout());        // Create a panel with a gradient background        GradientPanel panel = new GradientPanel();        panel.setLayout(new GridBagLayout());        setContentPane(panel);        GridBagConstraints gbc = new GridBagConstraints();        gbc.insets = new Insets(10, 10, 10, 10);        gbc.fill = GridBagConstraints.HORIZONTAL;        // Username Label and Field        JLabel nameLabel = createLabel("Username:");        gbc.gridx = 0;        gbc.gridy = 0;        panel.add(nameLabel, gbc);        usernameField = createTextField();        gbc.gridx = 1;        gbc.gridy = 0;        panel.add(usernameField, gbc);        // Password Label and Field        JLabel passwordLabel = createLabel("Password:");        gbc.gridx = 0;        gbc.gridy = 1;        panel.add(passwordLabel, gbc);        passwordField = createPasswordField();        gbc.gridx = 1;        gbc.gridy = 1;        panel.add(passwordField, gbc);        // Buttons Panel        JPanel buttonPanel = new JPanel(new GridBagLayout());        buttonPanel.setOpaque(false); // Transparent background for the button panel        GridBagConstraints btnGbc = new GridBagConstraints();        btnGbc.insets = new Insets(5, 10, 5, 10);        loginButton = createStyledButton("Login");        btnGbc.gridx = 0;        btnGbc.gridy = 0;        buttonPanel.add(loginButton, btnGbc);        cancelButton = createStyledButton("Cancel");        btnGbc.gridx = 1;        btnGbc.gridy = 0;        buttonPanel.add(cancelButton, btnGbc);        gbc.gridx = 0;        gbc.gridy = 2;        gbc.gridwidth = 2;        gbc.anchor = GridBagConstraints.CENTER;        panel.add(buttonPanel, gbc);        setVisible(true);    }    private JLabel createLabel(String text) {        JLabel label = new JLabel(text);        label.setFont(new Font("Tahoma", Font.BOLD, 18));        label.setForeground(Color.WHITE);        return label;    }    private JTextField createTextField() {        JTextField textField = new JTextField(15);        textField.setFont(new Font("Tahoma", Font.PLAIN, 18));        textField.setBackground(new Color(255, 255, 255, 200));        textField.setForeground(Color.BLACK);        textField.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));        return textField;    }    private JPasswordField createPasswordField() {        JPasswordField passwordField = new JPasswordField(15);        passwordField.setFont(new Font("Tahoma", Font.PLAIN, 18));        passwordField.setBackground(new Color(255, 255, 255, 200));        passwordField.setForeground(Color.BLACK);        passwordField.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));        return passwordField;    }    private JButton createStyledButton(String text) {        JButton button = new JButton(text);        button.setFont(new Font("Roboto", Font.BOLD, 16));        button.setBackground(new Color(0, 122, 255));        button.setForeground(Color.WHITE);        button.setFocusPainted(false);        button.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));        button.addActionListener(this);        return button;    }    @Override    public void actionPerformed(ActionEvent e) {        if (e.getSource() == loginButton) {            handleLogin();        } else if (e.getSource() == cancelButton) {            System.exit(0);        }    }    private void handleLogin() {        try {            conn c = new conn();            String user = usernameField.getText();            String pass = new String(passwordField.getPassword());            String query = "SELECT * FROM login WHERE ID = '" + user + "' AND PW = '" + pass + "'";            ResultSet resultSet = c.statement.executeQuery(query);            if (resultSet.next()) {                new Reception();                setVisible(false);            } else {                JOptionPane.showMessageDialog(null, "Invalid Username or Password");            }        } catch (Exception ex) {            ex.printStackTrace();        }    }    public static void main(String[] args) {        SwingUtilities.invokeLater(Login::new);    }    // Custom JPanel with Gradient Background    private static class GradientPanel extends JPanel {        @Override        protected void paintComponent(Graphics g) {            super.paintComponent(g);            Graphics2D g2d = (Graphics2D) g;            int width = getWidth();            int height = getHeight();            Color color1 = new Color(67, 70, 80);            Color color2 = new Color(0, 122, 255);            GradientPaint gp = new GradientPaint(0, 0, color1, 0, height, color2);            g2d.setPaint(gp);            g2d.fillRect(0, 0, width, height);        }    }}