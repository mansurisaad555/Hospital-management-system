package hospital.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.sql.ResultSet;import java.util.Date;public class NEW_PATIENT extends JFrame implements ActionListener {    private JComboBox<String> comboBox;    private JTextField textFieldNumber, textName, textFieldDisease, textFieldDeposite;    private JRadioButton r1, r2;    private Choice c1;    private JLabel dateLabel;    private JButton addButton, backButton;    public NEW_PATIENT() {        setTitle("Hospital Management System - New Patient");        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        setSize(850, 550);        setLocationRelativeTo(null); // Center the frame on the screen        setUndecorated(true); // Remove window borders        setLayout(new BorderLayout());        // Main panel with gradient background        GradientPanel mainPanel = new GradientPanel();        mainPanel.setLayout(null);        mainPanel.setBounds(5, 5, 840, 540);        add(mainPanel);        // Header label        JLabel headerLabel = new JLabel("NEW PATIENT FORM");        headerLabel.setFont(new Font("Tahoma", Font.BOLD, 24));        headerLabel.setForeground(Color.WHITE);        headerLabel.setBounds(300, 20, 300, 40);        mainPanel.add(headerLabel);        // Image on the right side        ImageIcon imageIcon = new ImageIcon(ClassLoader.getSystemResource("icon/patient.png"));        Image image = imageIcon.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);        JLabel imageLabel = new JLabel(new ImageIcon(image));        imageLabel.setBounds(550, 150, 200, 200);        mainPanel.add(imageLabel);        // Form components        addFormField(mainPanel, "ID:", 35, 76, comboBox = new JComboBox<>(new String[]{"Insurance Card", "Driving License", "N/A"}), 271, 73);        addFormField(mainPanel, "Number:", 35, 111, textFieldNumber = new JTextField(), 271, 111);        addFormField(mainPanel, "Name:", 35, 151, textName = new JTextField(), 271, 151);        // Gender selection        JLabel labelGender = createLabel("Gender:");        labelGender.setBounds(35, 191, 200, 14);        mainPanel.add(labelGender);        r1 = createRadioButton("Male", 271, 191);        r2 = createRadioButton("Female", 350, 191);        ButtonGroup genderGroup = new ButtonGroup();        genderGroup.add(r1);        genderGroup.add(r2);        mainPanel.add(r1);        mainPanel.add(r2);        addFormField(mainPanel, "Disease:", 35, 231, textFieldDisease = new JTextField(), 271, 231);        // Room selection        JLabel labelRoom = createLabel("Room:");        labelRoom.setBounds(35, 274, 200, 14);        mainPanel.add(labelRoom);        c1 = new Choice();        try {            conn c = new conn();            ResultSet resultSet = c.statement.executeQuery("SELECT * FROM Room");            while (resultSet.next()) {                c1.add(resultSet.getString("room_no"));            }        } catch (Exception e) {            e.printStackTrace();        }        c1.setBounds(271, 274, 150, 20);        c1.setFont(new Font("Tahoma", Font.BOLD, 14));        c1.setForeground(Color.WHITE);        c1.setBackground(new Color(3, 45, 48));        mainPanel.add(c1);        // Date and time        JLabel labelDate = createLabel("Time:");        labelDate.setBounds(35, 316, 200, 14);        mainPanel.add(labelDate);        Date date = new Date();        dateLabel = createLabel("" + date);        dateLabel.setBounds(271, 316, 250, 14);        mainPanel.add(dateLabel);        addFormField(mainPanel, "Deposit:", 35, 359, textFieldDeposite = new JTextField(), 271, 359);        // Add and Back buttons        addButton = createStyledButton("ADD");        addButton.setBounds(100, 430, 120, 30);        addButton.addActionListener(this);        mainPanel.add(addButton);        backButton = createStyledButton("Back");        backButton.setBounds(260, 430, 120, 30);        backButton.addActionListener(this);        mainPanel.add(backButton);        setVisible(true);    }    private void addFormField(JPanel panel, String labelText, int labelX, int labelY, JComponent field, int fieldX, int fieldY) {        JLabel label = createLabel(labelText);        label.setBounds(labelX, labelY, 200, 14);        panel.add(label);        field.setBounds(fieldX, fieldY, 150, 20);        panel.add(field);    }    private JLabel createLabel(String text) {        JLabel label = new JLabel(text);        label.setFont(new Font("Tahoma", Font.BOLD, 14));        label.setForeground(Color.WHITE);        return label;    }    private JRadioButton createRadioButton(String text, int x, int y) {        JRadioButton radioButton = new JRadioButton(text);        radioButton.setFont(new Font("Tahoma", Font.BOLD, 14));        radioButton.setForeground(Color.WHITE);        radioButton.setBackground(new Color(109, 164, 170));        radioButton.setBounds(x, y, 80, 15);        return radioButton;    }    private JButton createStyledButton(String text) {        JButton button = new JButton(text);        button.setFont(new Font("Roboto", Font.BOLD, 15));        button.setBackground(new Color(0, 122, 255));        button.setForeground(Color.WHITE);        button.setFocusPainted(false);        button.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));        return button;    }    @Override    public void actionPerformed(ActionEvent e) {        if (e.getSource() == addButton) {            conn c = new conn();            String gender = r1.isSelected() ? "Male" : r2.isSelected() ? "Female" : null;            String idType = (String) comboBox.getSelectedItem();            String number = textFieldNumber.getText();            String name = textName.getText();            String disease = textFieldDisease.getText();            String room = c1.getSelectedItem();            String time = dateLabel.getText();            String deposit = textFieldDeposite.getText();            try {                String query = "INSERT INTO Patient_Info VALUES ('" + idType + "', '" + number + "','" + name + "','" + gender + "', '" + disease + "', '" + room + "', '" + time + "', '" + deposit + "')";                String query1 = "UPDATE room SET Availability = 'Occupied' WHERE room_no = " + room;                c.statement.executeUpdate(query);                c.statement.executeUpdate(query1);                JOptionPane.showMessageDialog(null, "Added Successfully");                setVisible(false);            } catch (Exception ex) {                ex.printStackTrace();            }        } else if (e.getSource() == backButton) {            setVisible(false);        }    }    public static void main(String[] args) {        SwingUtilities.invokeLater(NEW_PATIENT::new);    }    // Custom JPanel with Gradient Background    private static class GradientPanel extends JPanel {        @Override        protected void paintComponent(Graphics g) {            super.paintComponent(g);            Graphics2D g2d = (Graphics2D) g;            int width = getWidth();            int height = getHeight();            Color color1 = new Color(67, 70, 80);            Color color2 = new Color(0, 122, 255);            GradientPaint gp = new GradientPaint(0, 0, color1, 0, height, color2);            g2d.setPaint(gp);            g2d.fillRect(0, 0, width, height);        }    }}